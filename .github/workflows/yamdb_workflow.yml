name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pytest
        cd api_yamdb/
        pip install -r requirements.txt 

    - name: Test with pytest
      run: pytest 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        cd api_yamdb/
        python manage.py test

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./api_yamdb/
          tags: lwe57/yamdb_final:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull lwe57/yamdb_final:latest
            sudo docker-compose stop
            sudo docker-compose rm -f web
            sudo docker-compose rm -f nginx
            sudo docker volume rm yapract57_static_value
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
            sudo docker-compose exec -T web python manage.py collectstatic --no-input            

  debug:
    name: Debug
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up secret file
      env:
            HOST: ${{ secrets.HOST }}
            USER: ${{ secrets.USER }}
            PASSPHRASE: {{ secrets.PASSPHRASE }}
            SSH_KEY: {{ secrets.SSH_KEY }}              
            DB_ENGINE: {{ secrets.DB_ENGINE }}
            DB_NAME: {{ secrets.DB_NAME }}
            POSTGRES_USER: {{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: {{ secrets.POSTGRES_PASSWORD }}
            DB_HOST: {{ secrets.DB_HOST }}
            DB_PORT: {{ secrets.DB_PORT }}
            TELEGRAM_TO: {{ secrets.TELEGRAM_TO }}
            TELEGRAM_TOKEN: {{ secrets.TELEGRAM_TOKEN }}     
      run: |
            echo HOST=${{ secrets.HOST }} >> secrets.txt
            echo USER=${{ secrets.USER }} >> secrets.txt
            echo PASSPHRASE=${{ secrets.PASSPHRASE }} >> secrets.txt
            echo SSH_KEY=${{ secrets.SSH_KEY }} >> secrets.txt                
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> secrets.txt
            echo DB_NAME=${{ secrets.DB_NAME }} >> secrets.txt
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> secrets.txt
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> secrets.txt
            echo DB_HOST=${{ secrets.DB_HOST }} >> secrets.txt
            echo DB_PORT=${{ secrets.DB_PORT }} >> secrets.txt
            echo TELEGRAM_TO=${{ secrets.TELEGRAM_TO }} >> secrets.txt
            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >> secrets.txt

    - name: Run tmate
      uses: mxschmitt/action-tmate@v2
 
